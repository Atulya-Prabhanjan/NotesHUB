{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranjith VK\\\\Desktop\\\\vit\\\\Fall semester 2021\\\\Software engineering\\\\project codes\\\\Notes-Review-home-main (2)\\\\src\\\\Components\\\\Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { getAllByPlaceholderText } from '@testing-library/react'; //import StarRatingComponent from \"react-star-rating-component\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputchange = event => {\n      this.setState({\n        queryString: event.target.value\n      });\n    };\n\n    this.rateNotes = noteID => {\n      console.log(\" Note ID: \" + noteID);\n      const token = getToken();\n      {\n        this.getRate;\n      }\n      axios.put('http://localhost:5000/rate', {\n        \"sessionToken\": token,\n        \"noteid\": noteID,\n        \"rating\": rate.value,\n        \"comments\": comments.value\n      }).then(response => {\n        alert(\"Opinions uploaded successfully!\");\n      }).catch(error => {\n        alert(\"Error\");\n      });\n    };\n\n    this.getNotesData = () => {\n      var URLString = 'http://localhost:5000/notes?search=' + this.state.queryString;\n      axios.get(URLString).then(response => {\n        console.log(response.data);\n        var notes = response.data;\n\n        for (let note of notes) {\n          console.log(note);\n\n          if (note.rating >= 7.5) {\n            note.className = 'green';\n          } else if (note.rating < 5) {\n            note.className = 'red';\n          } else {\n            note.className = 'yellow';\n          }\n        }\n\n        this.setState({\n          results: notes\n        });\n      }).catch(error => {\n        console.log(error);\n        alert(\"No Data found!\");\n      });\n    };\n\n    this.renderResults = () => {\n      const notes = this.state.results;\n      let listOfNotes = '';\n\n      if (notes && notes.length > 0) {\n        listOfNotes = notes.map((note, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-upload-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: [\" Description: \", note.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author\",\n            children: [\" Author: \", note.author, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subject\",\n            children: [\" Subject: \", note.subject, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: note.className,\n            children: [\" Average Rating: \", note.rating, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-button\",\n            children: \"view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rate-button\",\n            onClick: this.rateNotes(note.noteid),\n            children: \"rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"comment-button\",\n            children: \"comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extra-space\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, note.noteid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this));\n      }\n\n      console.log('list of notes', listOfNotes);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", listOfNotes, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this);\n    };\n\n    this.state = {\n      results: [],\n      listOfNotes: '',\n      queryString: '',\n      rating: 0,\n      comments: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-head\",\n          children: \" NotesHub Search / View Page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.onInputchange,\n          className: \"search-bar\",\n          placeholder: \"Search for notes..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: this.getNotesData,\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchResult\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-choose\",\n          children: \" Choose a document: - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), \" \", this.renderResults()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ranjith VK/Desktop/vit/Fall semester 2021/Software engineering/project codes/Notes-Review-home-main (2)/src/Components/Search.js"],"names":["React","axios","getAllByPlaceholderText","Search","Component","constructor","props","onInputchange","event","setState","queryString","target","value","rateNotes","noteID","console","log","token","getToken","getRate","put","rate","comments","then","response","alert","catch","error","getNotesData","URLString","state","get","data","notes","note","rating","className","results","renderResults","listOfNotes","length","map","idx","description","author","subject","noteid","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { getAllByPlaceholderText } from '@testing-library/react';\r\n//import StarRatingComponent from \"react-star-rating-component\";\r\n\r\nexport default class Search extends React.Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        results: [],\r\n        listOfNotes: '',\r\n        queryString: '',\r\n        rating:0,\r\n        comments:''\r\n        }\r\n    }\r\n\r\n    onInputchange = (event) => {\r\n        this.setState({\r\n            queryString: event.target.value\r\n        });\r\n    }\r\n\r\n    rateNotes = (noteID) => {\r\n        console.log(\" Note ID: \" + noteID);\r\n        const token = getToken();\r\n        {this.getRate}\r\n        axios.put('http://localhost:5000/rate',{\r\n            \"sessionToken\": token,\r\n            \"noteid\": noteID,\r\n            \"rating\": rate.value,\r\n            \"comments\": comments.value\r\n        }).then(response => {\r\n            alert(\"Opinions uploaded successfully!\");\r\n        }).catch(error => {\r\n            alert(\"Error\");\r\n        })\r\n    };\r\n\r\n    getNotesData = () => {\r\n        var URLString = 'http://localhost:5000/notes?search=' + this.state.queryString;\r\n        axios.get(URLString).then(response => {\r\n            console.log(response.data);\r\n            var notes = response.data;\r\n            for (let note of notes) {\r\n                console.log(note);\r\n                if (note.rating >= 7.5) {\r\n                    note.className = 'green';\r\n                } else if (note.rating < 5) {\r\n                    note.className = 'red';\r\n                } else {\r\n                    note.className = 'yellow';\r\n                }\r\n            }\r\n            this.setState({ results: notes })\r\n        }).catch(error => {\r\n            console.log(error);\r\n            alert(\"No Data found!\");\r\n        })\r\n    };\r\n\r\n    renderResults = () => {\r\n        const notes = this.state.results;\r\n        let listOfNotes = '';\r\n        if (notes && notes.length > 0) {\r\n            listOfNotes = notes.map((note, idx) =>\r\n                <div className = \"search-upload-box\" key = { note.noteid } >\r\n                    <div className = \"description\" > Description: { note.description } </div> \r\n                    <div className = \"author\" > Author: { note.author } </div> \r\n                    <div className = \"subject\" > Subject: { note.subject } </div> \r\n                    <div className = { note.className } > Average Rating: { note.rating } </div>\r\n                    <button className = \"view-button\" >view</button>  \r\n                    <button className = \"rate-button\" onClick={this.rateNotes(note.noteid)}>rate</button>   \r\n                    <button className = \"comment-button\" >comments</button> \r\n                    <button className = \"delete-button\" >delete</button>  \r\n                    <div className = \"extra-space\" > </div> \r\n                </div> );\r\n        }\r\n        console.log('list of notes', listOfNotes);\r\n        return ( <div> { listOfNotes } </div>);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <>\r\n                <div className = \"search-back\" >\r\n                    <div className = \"search-head\" > NotesHub Search / View Page </div>   \r\n                    <input type = \"search\"\r\n                        onChange = { this.onInputchange }\r\n                        className = \"search-bar\"\r\n                        placeholder = \"Search for notes..\" />\r\n                    <button className = \"search-button\"\r\n                        onClick = { this.getNotesData } > Submit </button>\r\n                    <div className = \"searchResult\" ></div> \r\n                    <div className = \"search-choose\" > Choose a document: - </div> { this.renderResults() } \r\n                </div> \r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}